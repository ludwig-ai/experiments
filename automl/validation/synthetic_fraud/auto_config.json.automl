2021-11-23 16:50:36.333128: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library libcudart.so.11.0
2021-11-23 16:50:47,365	INFO worker.py:823 -- Connecting to existing Ray cluster at address: 172.31.18.78:6379
[2m[36m(pid=None)[0m 2021-11-23 16:51:01.726408: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:176] None of the MLIR Optimization Passes are enabled (registered 2)
[2m[36m(pid=None)[0m 2021-11-23 16:51:01.903306: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2499995000 Hz
{'combiner': {'type': 'tabnet'},
 'hyperopt': {'executor': {'cpu_resources_per_trial': 16,
                           'gpu_resources_per_trial': 1,
                           'time_budget_s': 7200,
                           'type': 'ray'},
              'parameters': {'combiner.bn_momentum': {'categories': [0.6,
                                                                     0.7,
                                                                     0.8,
                                                                     0.9,
                                                                     0.95,
                                                                     0.98],
                                                      'space': 'choice'},
                             'combiner.bn_virtual_bs': {'categories': [256,
                                                                       512,
                                                                       1024,
                                                                       2048,
                                                                       4096],
                                                        'space': 'choice'},
                             'combiner.num_steps': {'categories': [3,
                                                                   4,
                                                                   5,
                                                                   6,
                                                                   7,
                                                                   8,
                                                                   9,
                                                                   10],
                                                    'space': 'choice'},
                             'combiner.output_size': {'categories': [8,
                                                                     16,
                                                                     24,
                                                                     32,
                                                                     64,
                                                                     128],
                                                      'space': 'choice'},
                             'combiner.relaxation_factor': {'categories': [1.0,
                                                                           1.2,
                                                                           1.5,
                                                                           2.0],
                                                            'space': 'choice'},
                             'combiner.size': {'categories': [8,
                                                              16,
                                                              24,
                                                              32,
                                                              64],
                                               'space': 'choice'},
                             'combiner.sparsity': {'categories': [0.0,
                                                                  1e-06,
                                                                  0.0001,
                                                                  0.001,
                                                                  0.01,
                                                                  0.1],
                                                   'space': 'choice'},
                             'training.batch_size': {'categories': [256,
                                                                    512,
                                                                    1024,
                                                                    2048,
                                                                    4096,
                                                                    8192],
                                                     'space': 'choice'},
                             'training.decay_rate': {'categories': [0.8,
                                                                    0.9,
                                                                    0.95],
                                                     'space': 'choice'},
                             'training.decay_steps': {'categories': [500,
                                                                     2000,
                                                                     8000,
                                                                     10000,
                                                                     20000],
                                                      'space': 'choice'},
                             'training.learning_rate': {'categories': [0.005,
                                                                       0.01,
                                                                       0.02,
                                                                       0.025],
                                                        'space': 'choice'}},
              'sampler': {'num_samples': 20,
                          'scheduler': {'max_t': 720.0,
                                        'time_attr': 'time_total_s',
                                        'type': 'async_hyperband'},
                          'type': 'ray'}},
 'input_features': [{'column': 'step', 'name': 'step', 'type': 'numerical'},
                    {'column': 'type', 'name': 'type', 'type': 'category'},
                    {'column': 'amount', 'name': 'amount', 'type': 'numerical'},
                    {'column': 'nameOrig',
                     'name': 'nameOrig',
                     'type': 'category'},
                    {'column': 'oldbalanceOrg',
                     'name': 'oldbalanceOrg',
                     'type': 'numerical'},
                    {'column': 'newbalanceOrig',
                     'name': 'newbalanceOrig',
                     'type': 'numerical'},
                    {'column': 'nameDest',
                     'name': 'nameDest',
                     'type': 'category'},
                    {'column': 'oldbalanceDest',
                     'name': 'oldbalanceDest',
                     'type': 'numerical'},
                    {'column': 'newbalanceDest',
                     'name': 'newbalanceDest',
                     'type': 'numerical'},
                    {'column': 'isFlaggedFraud',
                     'name': 'isFlaggedFraud',
                     'type': 'binary'}],
 'output_features': [{'column': 'isFraud',
                      'name': 'isFraud',
                      'type': 'binary'}],
 'training': {'batch_size': 'auto',
              'decay': True,
              'decay_rate': 0.95,
              'decay_steps': 500,
              'learning_rate': 'auto',
              'optimizer': {'type': 'adam'},
              'regularization_lambda': 1,
              'tune_batch_size': {'substitute_with_max': True,
                                  'type': 'bin_search'}}}
